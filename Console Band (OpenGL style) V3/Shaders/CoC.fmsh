#version 420


// uniform sampler2D uTex;

uniform sampler2D uFragPos;
uniform sampler2D uFragDepth;
uniform sampler2D uScene;
uniform sampler2D uBlurScene;
//uniform vec4 uViewPos;

uniform vec3  uCamPos;
uniform float aperture = 1;
uniform float focalLength = 10;
uniform float planeInFocus =10;

in vec2 texcoord;

out vec4 outColor;

float liniarizeDepth(float d, float n, float f){
	float z_n=2*d-1;
	return 2 * n * f / (f + n - z_n * (f - n));
}

void main()
{
    float objectDistance =distance(texture(uFragPos,texcoord).xyz, uCamPos);

    float CoC = abs(aperture * (focalLength * (objectDistance - planeInFocus)) / (objectDistance * (planeInFocus - focalLength)));

    //for testing
    vec3 colourA = texture(uScene,texcoord).rgb;
    vec3 colourB = texture(uBlurScene,texcoord).rgb;

    outColor.rgb =  colourA*(1-CoC) +  colourB * CoC;
    outColor.a = 1.0;

    outColor.rgb = vec3(objectDistance);
}